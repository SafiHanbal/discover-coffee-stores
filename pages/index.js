import { useEffect, useState, useContext } from 'react';
import Head from 'next/head';
import Image from 'next/image';
import styles from '@/styles/Home.module.css';

import Banner from '@/components/banner/banner';
import Card from '@/components/card/card';

import { fetchCoffeeStores } from '@/lib/coffee-stores';
import useTrackLocation from '@/hooks/use-track-location';
import { StoreContext, ACTION_TYPES } from '@/store/store-context';

export async function getStaticProps(context) {
  const coffeeStores = await fetchCoffeeStores();
  return {
    props: {
      coffeeStores,
    },
  };
}

export default function Home({ coffeeStores }) {
  const { handleTrackLocation, locationErrMsg, isFindingLocation } =
    useTrackLocation();

  const { latLong, fetchedCoffeeStores, dispatch } = useContext(StoreContext);
  const [fetchCoffeeStoresErr, setFetchedCoffeeStoresErr] = useState('');

  const handleOnBannerBtnClick = () => {
    handleTrackLocation();
  };

  useEffect(() => {
    (async () => {
      try {
        if (latLong) {
          const res = await fetch(
            `/api/getCoffeeStoresByLocation?latLong=${latLong}&limit=20`
          );
          const coffeeStores = await res.json();
          dispatch({
            type: ACTION_TYPES.SET_COFFEE_STORES,
            payload: coffeeStores,
          });
        }
      } catch (err) {
        setFetchedCoffeeStoresErr(err.message);
      }
    })();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [latLong]);

  return (
    <>
      <Head>
        <title>Coffee Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Banner
          buttonText={isFindingLocation ? 'Locating...' : 'View stores nearby'}
          handleOnClick={handleOnBannerBtnClick}
        />
        {locationErrMsg && <p>Something went wrong {locationErrMsg}</p>}
        {fetchCoffeeStoresErr && (
          <p>Something went wrong {fetchCoffeeStoresErr}</p>
        )}
        <div className={styles.heroImage}>
          <Image
            src="/static/hero-image.png"
            alt="hero image"
            width={600}
            height={370}
          />
        </div>

        {/* Fetched Stores */}
        {fetchedCoffeeStores.length > 0 && (
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Stores near me</h2>
            <div className={styles.cardLayout}>
              {fetchedCoffeeStores.map((coffeeStore) => (
                <Card
                  key={coffeeStore.id}
                  name={coffeeStore.name}
                  imgUrl={
                    coffeeStore.imgUrl ||
                    'https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80'
                  }
                  href={`/coffee-store/${coffeeStore.id}`}
                />
              ))}
            </div>
          </div>
        )}

        {/* Toronto Stores */}
        {coffeeStores.length > 0 && (
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Toronto stores</h2>
            <div className={styles.cardLayout}>
              {coffeeStores.map((coffeeStore) => (
                <Card
                  key={coffeeStore.id}
                  name={coffeeStore.name}
                  imgUrl={
                    coffeeStore.imgUrl ||
                    'https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80'
                  }
                  href={`/coffee-store/${coffeeStore.id}`}
                />
              ))}
            </div>
          </div>
        )}
      </main>
    </>
  );
}
